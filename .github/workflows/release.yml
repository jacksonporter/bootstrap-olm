name: Release

on:
  push:
    branches:
      - jp/test-release
    # tags:
    #   - 'v*'

jobs:
  build-containers:
    uses: jacksonporter/build-containers-action/.github/workflows/reusable-build-containers.yml@jp/v1dev

  # release-to-github:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - uses: jdx/mise-action@v2
  #       with:
  #         experimental: true # [default: false] enable experimental features

  #     - name: Setup Node/Yarn
  #       run: |
  #         echo "Enabling corepack"
  #         mise exec -- corepack enable
  #         echo "Preparing corepack"
  #         mise exec -- corepack prepare --activate
  #         echo "Installing dependencies"
  #         mise exec -- yarn install
  #         echo "Dependencies installed"

  #     - name: Install project dependencies
  #       run: mise run 'install'

  #     - name: Run GoReleaser
  #       uses: goreleaser/goreleaser-action@v6
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # build-containers:
  #   name: Build containers
  #   strategy:
  #     matrix:
  #       platform:
  #         - linux/amd64
  #         - linux/arm64
  #       include:
  #         - platform: linux/amd64
  #           runner-label: ubuntu-24.04
  #         - platform: linux/arm64
  #           runner-label: ubuntu-24.04-arm
  #   runs-on: ${{ matrix.runner-label }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - uses: jdx/mise-action@v2
  #       with:
  #         experimental: true # [default: false] enable experimental features

  #     - name: Setup Node/Yarn
  #       run: |
  #         echo "Enabling corepack"
  #         mise exec -- corepack enable
  #         echo "Preparing corepack"
  #         mise exec -- corepack prepare --activate
  #         echo "Installing dependencies"
  #         mise exec -- yarn install
  #         echo "Dependencies installed"

  #     - name: Install project dependencies
  #       run: mise run 'install'

  #     - name: Update apt cache
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y podman

  #     - name: Build containers
  #       run: mise run 'build-containers'

  # # create-combined-manifests:

  # test-windows-amd64:
  #   name: Test Windows AMD64
  #   runs-on: windows-2025
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - uses: jdx/mise-action@v2
  #       with:
  #         experimental: true # [default: false] enable experimental features

  #     - name: Install project dependencies
  #       env:
  #         ENABLED_PACKAGE_MANAGERS: "yarn"
  #       run: mise run 'install'

  #     - name: test build
  #       run: docker build -f Dockerfile.windows -t bootstrap-olm:debug --build-arg GO_VERSION=$(mise current go) .
