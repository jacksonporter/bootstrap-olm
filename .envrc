#!/usr/bin/env bash

set -e

# Before custom envrc
if [ -f ".before.custom.envrc" ]; then
  # shellcheck disable=SC1091
  . .before.custom.envrc
fi

# Set machine type
unameOut="$(uname -s)"
case "${unameOut}" in
Linux*)
  MACHINE="gnu/linux"
  ;;
Darwin*)
  MACHINE="macOS"
  ;;
*)
  MACHINE="UNKNOWN:${unameOut}"
  ;;
esac

# brew
if [ -z "${SKIP_BREW}" ]; then
  if command -v brew 2>&1 >/dev/null 2>&1; then
    printf "brew is installed, running brew bundle\n" 1>&2
    brew bundle --no-upgrade
  fi
fi

# podman
if [ -z "${SKIP_PODMAN}" ]; then
  if [ "${MACHINE}" = "macOS" ] && [ "$(podman machine list --format json | jq '. | length')" -eq 0 ]; then
    printf "No podman machine was detected and your on macOS. Creating podman machine.\n" 1>&2
    podman machine init
    podman machine start || echo "Failed to start podman machine, it may already be running"
  fi
fi

# rbenv
if [ -z "${SKIP_RBENV}" ]; then
  if command -v rbenv 2>&1 >/dev/null 2>&1; then
    export PATH="$HOME/.rbenv/bin:$PATH"

    printf "rbenv is installed, running rbenv install\n" 1>&2
    rbenv install -s
  fi
fi

# Install ruby deps via bundler
if [ -z "${SKIP_BUNDLER}" ]; then
  if command -v bundler 2>&1 >/dev/null 2>&1; then
    printf "bundler is installed, running bundle install\n" 1>&2
    bundle install
  fi
fi

# pipx
if [ -z "${SKIP_PIPX}" ]; then
  if command -v pipx 2>&1 >/dev/null 2>&1; then
    if [ -f ".pipx-requirements" ]; then
      printf "Installing packages from .pipx-requirements\n" 1>&2
      xargs -a .pipx-requirements -I{} pipx install "{}"
    fi
  fi
fi

# pre-commit hook
if [ -z "${SKIP_PRE_COMMIT_HOOK}" ] && [ -d ".git" ] && [ ! -f ".git/hooks/pre-commit" ]; then
  printf "Installing pre-commit hook\n" 1>&2
  pre-commit install
fi

# goenv
if [ -z "${SKIP_GOENV}" ]; then
  if command -v goenv 2>&1 >/dev/null 2>&1; then
    export GOENV_ROOT="$HOME/.goenv"
    export PATH="$GOENV_ROOT/bin:$PATH"
    export PATH="$GOROOT/bin:$PATH"
    export PATH="$PATH:$GOPATH/bin"

    printf "goenv is installed, running goenv install\n" 1>&2
    goenv install -s
  fi
fi

# install go deps via go mod
if [ -z "${SKIP_GO_MOD}" ]; then
  if command -v go 2>&1 >/dev/null 2>&1; then
    printf "go is installed, running go mod tidy\n" 1>&2
    go mod tidy
  fi
fi

# After custom envrc
if [ -f ".after.custom.envrc" ]; then
  # shellcheck disable=SC1091
  . .after.custom.envrc
fi
